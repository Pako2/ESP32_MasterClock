[platformio]
default_envs = data
;default_envs = webh

[common]
board = esp32-c3-devkitm-1
platform = espressif32
framework = arduino
monitor_speed = 115200
upload_speed = 115200
monitor_dtr = 0
monitor_rts = 0
monitor_echo = yes
monitor_filters = esp32_exception_decoder, time
board_build.mcu = esp32c3
board_build.f_cpu = 160000000L
board_build.flash_mode = dout
board_build.filesystem = littlefs
board_build.partitions = PartitionTables/default.csv
lib_deps = 
    LittleFS
	bblanchon/ArduinoJson
	densaugeo/base64@^1.4.0
build_flags =
	-D VERSION=0.1.2
	-D SETTXPOWER
	-D RGB_PIN=6
	-D NO_FASTLED_SPI_MESSAGE
	-D CORE_DEBUG_LEVEL=2
	-D CONFIG_ARDUHAL_LOG_COLORS=1
	-D ARDUINO_USB_MODE=1 
	-D ARDUINO_USB_CDC_ON_BOOT=1


[env:data]
board = ${common.board}
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}
monitor_echo = ${common.monitor_echo}
monitor_filters = ${common.monitor_filters}
board_build.mcu = ${common.board_build.mcu}
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.filesystem = ${common.board_build.filesystem}
board_build.partitions = ${common.board_build.partitions}
lib_deps = ${common.lib_deps}
extra_scripts = 
	post:scripts/DATAdeploy.py
	scripts/custom_targets.py
build_flags =
;    -v                           ;verbose mode
	${common.build_flags}
	-D DEBUG


[env:webh]
board = ${common.board}
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
monitor_dtr = ${common.monitor_dtr}
monitor_rts = ${common.monitor_rts}
monitor_echo = ${common.monitor_echo}
monitor_filters = ${common.monitor_filters}
board_build.mcu = ${common.board_build.mcu}
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.filesystem = ${common.board_build.filesystem}
board_build.partitions = PartitionTables/small_fs.csv
lib_deps = ${common.lib_deps}
extra_scripts = post:scripts/WEBHdeploy.py
build_flags =
;    -v                           ;verbose mode
	${common.build_flags}
	-D USEWEBH
	-D OTA
